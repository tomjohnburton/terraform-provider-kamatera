# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your 
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step 
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: test
on:
  push:
jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - env:
          KAMATERA_API_CLIENT_ID: ${{ secrets.KAMATERA_API_CLIENT_ID }}
          KAMATERA_API_SECRET: ${{ secrets.KAMATERA_API_SECRET }}
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION="$(echo $GITHUB_REF | sed -e 's:refs/tags/::')"
          else
            VERSION=0.0.0
          fi &&\
          go build -ldflags "-X main.Version=${VERSION}" -o terraform-provider-kamatera &&\
          curl -sSL https://releases.hashicorp.com/terraform/0.12.25/terraform_0.12.25_linux_amd64.zip -o terraform.zip &&\
          unzip terraform.zip &&\
          curl -sSL https://cloudcli.cloudwm.com/binaries/latest/cloudcli-linux-amd64.tar.gz -o cloudcli.tar.gz &&\
          tar -xzvf cloudcli.tar.gz &&\
          chmod +x terraform-provider-kamatera terraform cloudcli &&\
          export PATH=`pwd`:$PATH &&\
          python3 tests/e2e_test.py
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: tests_output
          path: tests/output
---
name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      -
        name: Import GPG key
        id: import_gpg
        # TODO: move this to HashiCorp namespace or find alternative that is just simple gpg commands
        # see https://github.com/hashicorp/terraform-provider-scaffolding/issues/22
        uses: paultyng/ghaction-import-gpg@v2.1.0
        env:
          # These secrets will need to be configured for the repository:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
